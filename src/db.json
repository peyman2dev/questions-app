{
  "questions": [
    {
      "id": "2f2ef637-34c5-4889-ab4f-dd14fdbb4214",
      "fa_title": "تفاوت بین state و props در React چیست؟",
      "en_title": "What is the difference between state and props in React?",
      "author": {
        "username": "@peyman2dev",
        "fullName": "پیمان احمدی"
      },
      "question": "<p>سلام خدمت تیم سبزلرن، </p><p>من تازه شروع به یادگیری React کردم و در تفاوت بین state و props رو درک نمی کنم. هر دوی اینها برای مدیریت داده‌ها در کامپوننت‌ها استفاده میشن، اما کاربرد و عملکرد دقیق هر کدوم رو متوجه نمیشم.. میشه کمک کنید تا بفهمم state و props چه تفاوتی با هم دارن و هر کدوم چه کاربردی دارن؟</p>",
      "answer": "<p>درود عزیز !</p><p><br></p><p><strong>تفاوت بین state و props در React یکی از مفاهیم اساسی این فریمورک هست</strong> و دونستن این تفاوت‌ها خیلی مهمه. بذار برات توضیح بدم:</p><h3><br></h3><p><strong>تعریف </strong>props : <strong>props </strong>مخفف properties هست و برای ارسال داده از کامپوننت والد به کامپوننت فرزند استفاده می‌شه.</p><p><br></p><h3><strong>ویژگی‌های props</strong>:</h3><p> فقط برای خواندن هست و ما نمی‌تونیم اونا رو تغییر بدیم.</p><p>کامپوننت فرزند می‌تونه props رو به عنوان ورودی بگیره و ازشون استفاده کنه، اما نمی‌تونه اونا رو تغییر بده.</p><p><br></p><h3><br></h3><p><strong>تعریف </strong>state: <strong>state </strong>وضعیت داخلی یک کامپوننت رو نگه می‌داره و می‌تونه در طول زمان تغییر کنه.</p><p><br></p><h3><strong>ویژگی‌های state</strong>:</h3><p>Mutable هستش و می‌تونه تغییر کنه.</p><p>درون‌زا: state فقط داخل همون کامپوننت تعریف و مدیریت می‌شه.</p><p>تغییرات در state باعث رندر مجدد کامپوننت می‌شه و می‌تونیم بر اساس تغییرات state، رابط کاربری رو به‌روزرسانی کنیم.</p><p><br></p><h3><strong>مثال:</strong></h3><p>برای اینکه این تفاوت‌ها رو بهتر متوجه بشی، یه مثال می‌زنم:</p><p><br></p><p>&lt;Codes /&gt;</p><p><br></p><p>در این مثال، myProp از کامپوننت والد به فرزند به عنوان <strong>prop </strong>فرستاده می‌شه و در ChildComponent استفاده می‌شه.</p><p> از طرفی، myState داخل ChildComponent به عنوان <strong>state </strong>تعریف شده و با استفاده از دکمه می‌تونیم تغییرش بدیم.</p><p><br></p><p>امیدوارم تونسته باشم کمکت کنم! 💚🙏</p>"
    },
    {
      "id": "cf716645-5563-48d6-9dab-0feb0fb18433",
      "fa_title": "نمایش یا مخفی کردن عنصر در React",
      "en_title": "Show or hide element in React",
      "author": {
        "username": "@peyman2dev",
        "fullName": "پیمان احمدی"
      },
      "question": "<p>چطور می‌تونم در React یک عنصر رو به صورت پویا (داینامیک ) نمایش بدم یا مخفی کنم؟ </p><p>مثلا فرض کنید یک دکمه دارم که با کلیک روی اون، یک متن نمایش داده بشه و دوباره با کلیک روی همون دکمه، متن مخفی بشه. بهترین راه برای انجام این کار چیه؟</p><p><br></p>",
      "answer": "<p>برای نمایش یا مخفی کردن یک عنصر در React، می‌تونید از state استفاده کنید. با استفاده از state، می‌تونید حالت نمایش یا مخفی بودن عنصر رو کنترل کنید.</p><p>این کار رو با استفاده از یک boolean state انجام می‌دیم که در ابتدا مقدارش false هست (عنصر مخفی است) و با کلیک روی دکمه، مقدارش رو تغییر می‌دیم.</p><p>اینجوری می‌تونیم عنصر رو نمایش بدیم یا مخفی کنیم. به مثال زیر دقت کن:</p><p><br></p><p><strong>(کد های ما اینجا قرار میگیره)</strong></p><p><br></p><p>در این مثال، از هوک useState استفاده شده تا حالت نمایش یا مخفی بودن عنصر رو مدیریت کنیم.</p><p>با کلیک روی دکمه، تابع toggle Visibility فراخوانی می‌شه و مقدار state تغییر می‌کنه. اگه state true باشه، عنصر نمایش داده می‌شه و اگه false باشه، عنصر مخفی می‌شه.</p><p>این روش بسیار ساده و کارآمده و به خوبی با معماری React سازگار هست. امیدوارم که این توضیحات و مثال کمکت کرده باشه! :)</p>"
    },
    {
      "id": "ad6aaaa3-87eb-4c13-827c-223e816392f2",
      "fa_title": "چجوری بعد از رندر کردن، فوکوس را روی یک فیلد ورودی تنظیم کنیم؟",
      "en_title": "How to set focus on an input field after rendering?",
      "author": {
        "username": "@peyman2dev",
        "fullName": "پیمان احمدی"
      },
      "question": "<p>چطور می‌تونم بعد از اینکه یک کامپوننت در React رندر شد، فوکوس(focus) رو روی یک فیلد ورودی قرار بدم؟</p><p>مثلا وقتی کامپوننت لود شد، به طور خودکار فوکوس روی یک فیلد متنی قرار بگیره. بهترین روش برای این کار چیه؟</p>",
      "answer": "<p>برای اینکه بعد از رندر شدن یک کامپوننت در React فوکوس رو روی یک فیلد ورودی تنظیم کنی، می‌تونی از Refs استفاده کنی.</p><p>Refs به شما امکان می‌ده که به عناصر DOM مستقیما دسترسی داشته باشی و می‌تونی فوکوس رو روی یک فیلد ورودی بعد از رندر شدن کامپوننت تنظیم کنی.</p><p><br></p><p>به صورت کد به شما توضیح میدم:</p><p><br></p><p><strong>(کدهای ما اینجا قرار میگیره:)</strong></p><p><br></p><p>در این مثال، از هوک useRef برای ساختن یک ریفرنس به فیلد ورودی استفاده شده و سپس با استفاده از هوک useEffect، بعد از اینکه کامپوننت رندر شد</p><p>تابع focus روی ریفرنس ورودی فراخوانی می‌شه. این باعث می‌شه که فوکوس به صورت خودکار روی فیلد ورودی قرار بگیره.</p><p>استفاده از useRef و useEffect در اینجا بهترین روش برای تنظیم فوکوس روی یک فیلد ورودی بعد از رندر شدن کامپوننت هست.</p><p><br></p><p>امیدوارم که این توضیحات و مثال کمکت کرده باشه! 💚✌</p>"
    },
    {
      "id": "d3fbf1a7-1d7b-42ab-bd17-5ba7f5e08a3c",
      "fa_title": "چطور می‌تونم از کال‌ بک setState با استفاده از هوک‌های React استفاده کنم؟",
      "en_title": "How to use setState callback on React Hooks?",
      "author": {
        "username": "@peyman2dev",
        "fullName": "پیمان احمدی"
      },
      "question": "<p>چطوری میتونم با استفاده از هوک‌های React یک کال‌ بک برای setState تعریف کنم؟ به عبارت دیگه</p><p>وقتی که حالت (state) تغییر کرد، بتونم عملیاتی رو بعد از بروزرسانی state انجام بدم؟</p>",
      "answer": "<p>درود عزیز</p><p>در React با استفاده از هوک‌ها (مثل useState)، نمی‌تونید مستقیم از کال‌ بک برای setState استفاده کنید، </p><p>چون هوک‌های useState به صورت مستقیم کال‌ بک ندارن. اما می‌تونید از هوک useEffect برای رسیدن به نتیجه مشابه استفاده کنید.</p><p>به این صورت که بعد از تغییر state، useEffect فراخوانی می‌شه و می‌تونید عملیاتی رو که می‌خواید در اینجا انجام بدید.</p><p><br></p><p>به کد زیر دقت کن:</p><p><br></p><p><strong><em>(کد)</em></strong></p><p><br></p><p>در این مثال، useEffect برای نظارت بر تغییرات count تنظیم شده! هر بار که count تغییر کنه، useEffect اجرا میشه و شما می‌تونید در اینجا کدهایی رو بنویسید که بعد از تغییر count اجرا بشن..</p><p>در واقع، با استفاده از useEffect و لیست وابستگی‌ها، می‌تونید به صورت غیر مستقیم مشابه کال‌ بک‌های setState عمل کنید.</p><p><br></p><p> امیدوارم این توضیحات کمک‌کننده باشه!</p>"
    },
    {
      "id": "2fb6b629-71f6-4db2-8792-9e1f9d09e954",
      "fa_title": "استفاده از متد Push در هوک‌های useState در React",
      "en_title": "Push method in React Hooks useState",
      "author": {
        "username": "@peyman2dev",
        "fullName": "پیمان احمدی"
      },
      "question": "<p>چطور می‌تونم از متد push برای اضافه کردن عناصر به یک آرایه در حالت (state) با استفاده از هوک‌های useState در React استفاده کنم؟</p><p> مثلا فرض کنید یک لیست از آیتم‌ها دارم و می‌خوام به اون لیست یک آیتم جدید اضافه کنم. روش صحیح برای انجام این کار چیه؟</p>",
      "answer": "<p>برای اضافه کردن عناصر به یک آرایه در state با استفاده از useState، باید یک کپی از آرایه فعلی بگیرید و بعد عنصر جدید رو به اون آرایه کپی شده اضافه کنید.</p><p>استفاده مستقیم از push بر روی state فعلی باعث تغییر مستقیم در state می‌شه که خلاف اصول React هست.</p><p> در عوض، می‌تونید از روش‌های spread یا concat استفاده کنید تا یک آرایه جدید با عنصر اضافه شده ایجاد کنید و سپس این آرایه جدید رو در state تنظیم کنید.</p><p><br></p><p> به مثال زیر دقت کن:</p><p><br></p><p>کد...</p><p><br></p><p>در این مثال، از هوک useState برای مدیریت یک لیست از آیتم‌ها استفاده شده. </p><p>تابع addItem یک آیتم جدید به لیست اضافه می‌کنه. در این تابع، ابتدا یک کپی از آرایه items با استفاده از spread ساخته می‌شه و سپس آیتم جدید به این کپی اضافه می‌شه.</p><p>در نهایت، آرایه جدید با استفاده از setItems به روزرسانی می‌شه.</p><p><br></p><p>همچنین می‌تونید از متد concat به جای spread استفاده کنید:</p><p><br></p><p>کد دوم ...</p><p><br></p><p>هر دو روش نتیجه مشابهی دارن و انتخاب بین این دو به ترجیحات شخصی شما بستگی داره. با این روش‌ها، از تغییر مستقیم state جلوگیری می‌کنید</p><p> و به روش صحیحی state رو در React به روز می‌کنید. :)</p><p><br></p><p>امیدوارم این توضیحات و مثال‌ها مفید بوده باشن! 💚✌</p>"
    },
    {
      "id": "ae18e739-e28a-4382-ac69-29dba9670742",
      "fa_title": "مسیر صحیح برای img در React.js",
      "en_title": "Correct path for img on React.js",
      "author": {
        "username": "@peyman2dev",
        "fullName": "پیمان احمدی"
      },
      "question": "<p>چجوری میتونم در React.js مسیر صحیح برای یک تگ img مشخص کنم؟ زمانی که تصاویر در پروژه قرار دارن، چطور باید مسیرها را تنظیم کنم تا به درستی نمایش داده بشن؟</p>",
      "answer": "<p>توصیه من به شما اینه که تصاویرتون رو در فولدر <strong>/public </strong>ذخیره کنید تا دسترسی آسان تری رو داشته باشید</p><p><br></p><p>اگر میخواید از تصاویر به صورت استاتیک استفاده کنید و اونارو را مستقیماً از public فولدر لود کنید،</p><p>می تونید تصاویر خود را در پوشه public قرار بدین و سپس به صورت زیر به آن‌ها ارجاع دهید:</p><p><br></p><p><strong>کد ما.</strong></p><p><br></p><p>در این روش، تصاویر در پوشه public/images قرار می‌گیرن و از طریق مسیر مطلق URL لود میشن.</p><p>این روش مفیده و اگر نیاز دارید تصاویر به صورت استاتیک و بدون باندل کردن استفاده بشن.</p><p>این روش برای مدیریت تصاویر در React.js کاربرد داره،</p><p><br></p><p>امیدوارم که مفید بوده باشه ✌💚</p>"
    }
  ]
}